;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 27/12/2023 12:08:51 ã
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF16  	GOTO        44
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x001C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x001E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0022	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0024	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0026	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0028	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x002A	0x0012      	RETURN      0
; end of ___CC2DW
_main:
;TASK_3_buzzer_pushbuttom.c,1 :: 		int main() {
;TASK_3_buzzer_pushbuttom.c,3 :: 		TRISC=0;   // def out
0x002C	0x6A94      	CLRF        TRISC 
;TASK_3_buzzer_pushbuttom.c,4 :: 		TRISA.RA0=0; // def out
0x002E	0x9092      	BCF         TRISA, 0 
;TASK_3_buzzer_pushbuttom.c,5 :: 		TRISb.RB6=1;  // def input
0x0030	0x8C93      	BSF         TRISB, 6 
;TASK_3_buzzer_pushbuttom.c,6 :: 		TRISb.RB7=1;  // def input
0x0032	0x8E93      	BSF         TRISB, 7 
;TASK_3_buzzer_pushbuttom.c,8 :: 		while (1) {
L_main0:
;TASK_3_buzzer_pushbuttom.c,10 :: 		if (PORTB.RB6 == 1){        // when prees on button
0x0034	0xAC81      	BTFSS       PORTB, 6 
0x0036	0xD030      	BRA         L_main2
;TASK_3_buzzer_pushbuttom.c,11 :: 		while (PORTB.RB6 = 1){};
L_main3:
0x0038	0x8C81      	BSF         PORTB, 6 
0x003A	0xAC81      	BTFSS       PORTB, 6 
0x003C	0xD001      	BRA         L_main4
0x003E	0xD7FC      	BRA         L_main3
L_main4:
;TASK_3_buzzer_pushbuttom.c,12 :: 		LATC=LATC<<1;   // ste port c = 1
0x0040	0xF000CF8B  	MOVFF       LATC, R0
0x0044	0x3600      	RLCF        R0, 1 
0x0046	0x9000      	BCF         R0, 0 
0x0048	0xFF8BC000  	MOVFF       R0, LATC
;TASK_3_buzzer_pushbuttom.c,14 :: 		if (LATC==0)       // if all pins in port c = 0
0x004C	0x508B      	MOVF        LATC, 0 
0x004E	0x0A00      	XORLW       0
0x0050	0xE102      	BNZ         L_main5
;TASK_3_buzzer_pushbuttom.c,17 :: 		LATC=0B0000001;   // return and set first pin = 1
0x0052	0x0E01      	MOVLW       1
0x0054	0x6E8B      	MOVWF       LATC 
;TASK_3_buzzer_pushbuttom.c,19 :: 		}
L_main5:
;TASK_3_buzzer_pushbuttom.c,20 :: 		delay_ms(500);
0x0056	0x0E03      	MOVLW       3
0x0058	0x6E0B      	MOVWF       R11, 0
0x005A	0x0E8A      	MOVLW       138
0x005C	0x6E0C      	MOVWF       R12, 0
0x005E	0x0E55      	MOVLW       85
0x0060	0x6E0D      	MOVWF       R13, 0
L_main6:
0x0062	0x2E0D      	DECFSZ      R13, 1, 0
0x0064	0xD7FE      	BRA         L_main6
0x0066	0x2E0C      	DECFSZ      R12, 1, 0
0x0068	0xD7FC      	BRA         L_main6
0x006A	0x2E0B      	DECFSZ      R11, 1, 0
0x006C	0xD7FA      	BRA         L_main6
0x006E	0x0000      	NOP
0x0070	0x0000      	NOP
;TASK_3_buzzer_pushbuttom.c,22 :: 		if (LATC.RC7==1){ // check if the end of led hight turn on buzzer
0x0072	0xAE8B      	BTFSS       LATC, 7 
0x0074	0xD010      	BRA         L_main7
;TASK_3_buzzer_pushbuttom.c,23 :: 		LATA.RA0 =1;
0x0076	0x8089      	BSF         LATA, 0 
;TASK_3_buzzer_pushbuttom.c,24 :: 		delay_ms(500);
0x0078	0x0E03      	MOVLW       3
0x007A	0x6E0B      	MOVWF       R11, 0
0x007C	0x0E8A      	MOVLW       138
0x007E	0x6E0C      	MOVWF       R12, 0
0x0080	0x0E55      	MOVLW       85
0x0082	0x6E0D      	MOVWF       R13, 0
L_main8:
0x0084	0x2E0D      	DECFSZ      R13, 1, 0
0x0086	0xD7FE      	BRA         L_main8
0x0088	0x2E0C      	DECFSZ      R12, 1, 0
0x008A	0xD7FC      	BRA         L_main8
0x008C	0x2E0B      	DECFSZ      R11, 1, 0
0x008E	0xD7FA      	BRA         L_main8
0x0090	0x0000      	NOP
0x0092	0x0000      	NOP
;TASK_3_buzzer_pushbuttom.c,25 :: 		}else {
0x0094	0xD001      	BRA         L_main9
L_main7:
;TASK_3_buzzer_pushbuttom.c,26 :: 		LATA.RA0 =0;
0x0096	0x9089      	BCF         LATA, 0 
;TASK_3_buzzer_pushbuttom.c,27 :: 		}
L_main9:
;TASK_3_buzzer_pushbuttom.c,28 :: 		}
L_main2:
;TASK_3_buzzer_pushbuttom.c,29 :: 		if (PORTB.RB7 == 1){
0x0098	0xAE81      	BTFSS       PORTB, 7 
0x009A	0xD030      	BRA         L_main10
;TASK_3_buzzer_pushbuttom.c,30 :: 		while (PORTB.RB7 = 1){};
L_main11:
0x009C	0x8E81      	BSF         PORTB, 7 
0x009E	0xAE81      	BTFSS       PORTB, 7 
0x00A0	0xD001      	BRA         L_main12
0x00A2	0xD7FC      	BRA         L_main11
L_main12:
;TASK_3_buzzer_pushbuttom.c,31 :: 		LATC=LATC>>1;
0x00A4	0xF000CF8B  	MOVFF       LATC, R0
0x00A8	0x3200      	RRCF        R0, 1 
0x00AA	0x9E00      	BCF         R0, 7 
0x00AC	0xFF8BC000  	MOVFF       R0, LATC
;TASK_3_buzzer_pushbuttom.c,33 :: 		if (LATC==0)
0x00B0	0x508B      	MOVF        LATC, 0 
0x00B2	0x0A00      	XORLW       0
0x00B4	0xE102      	BNZ         L_main13
;TASK_3_buzzer_pushbuttom.c,35 :: 		LATC=0B10000000;
0x00B6	0x0E80      	MOVLW       128
0x00B8	0x6E8B      	MOVWF       LATC 
;TASK_3_buzzer_pushbuttom.c,36 :: 		}
L_main13:
;TASK_3_buzzer_pushbuttom.c,37 :: 		delay_ms(500);
0x00BA	0x0E03      	MOVLW       3
0x00BC	0x6E0B      	MOVWF       R11, 0
0x00BE	0x0E8A      	MOVLW       138
0x00C0	0x6E0C      	MOVWF       R12, 0
0x00C2	0x0E55      	MOVLW       85
0x00C4	0x6E0D      	MOVWF       R13, 0
L_main14:
0x00C6	0x2E0D      	DECFSZ      R13, 1, 0
0x00C8	0xD7FE      	BRA         L_main14
0x00CA	0x2E0C      	DECFSZ      R12, 1, 0
0x00CC	0xD7FC      	BRA         L_main14
0x00CE	0x2E0B      	DECFSZ      R11, 1, 0
0x00D0	0xD7FA      	BRA         L_main14
0x00D2	0x0000      	NOP
0x00D4	0x0000      	NOP
;TASK_3_buzzer_pushbuttom.c,38 :: 		if (LATC.RC0==1){
0x00D6	0xA08B      	BTFSS       LATC, 0 
0x00D8	0xD010      	BRA         L_main15
;TASK_3_buzzer_pushbuttom.c,39 :: 		LATA.RA0 =1;
0x00DA	0x8089      	BSF         LATA, 0 
;TASK_3_buzzer_pushbuttom.c,40 :: 		delay_ms(500);
0x00DC	0x0E03      	MOVLW       3
0x00DE	0x6E0B      	MOVWF       R11, 0
0x00E0	0x0E8A      	MOVLW       138
0x00E2	0x6E0C      	MOVWF       R12, 0
0x00E4	0x0E55      	MOVLW       85
0x00E6	0x6E0D      	MOVWF       R13, 0
L_main16:
0x00E8	0x2E0D      	DECFSZ      R13, 1, 0
0x00EA	0xD7FE      	BRA         L_main16
0x00EC	0x2E0C      	DECFSZ      R12, 1, 0
0x00EE	0xD7FC      	BRA         L_main16
0x00F0	0x2E0B      	DECFSZ      R11, 1, 0
0x00F2	0xD7FA      	BRA         L_main16
0x00F4	0x0000      	NOP
0x00F6	0x0000      	NOP
;TASK_3_buzzer_pushbuttom.c,41 :: 		}else {
0x00F8	0xD001      	BRA         L_main17
L_main15:
;TASK_3_buzzer_pushbuttom.c,42 :: 		LATA.RA0 =0;
0x00FA	0x9089      	BCF         LATA, 0 
;TASK_3_buzzer_pushbuttom.c,43 :: 		}
L_main17:
;TASK_3_buzzer_pushbuttom.c,44 :: 		}
L_main10:
;TASK_3_buzzer_pushbuttom.c,45 :: 		}
0x00FC	0xD79B      	BRA         L_main0
;TASK_3_buzzer_pushbuttom.c,46 :: 		}
L_end_main:
0x00FE	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [16]    ___CC2DW
0x002C     [212]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    __Lib_USB_genHID_?FLOC____Lib_USB_genHID_USB_Handle_BusyT1
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0002       [2]    memchr_s_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0003       [1]    R3
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT29
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    frexp_pom_L0
0x0004       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT40
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [1]    R4
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    strcat_cp_L0
0x0004       [1]    __Lib_USB_genHID_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0005       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT54
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0006       [1]    R6
0x0006       [1]    __Lib_Sprinti_?FLOC____Lib_Sprinti_Do_FillT69
0x0006       [2]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_totalLen_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [3]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_ptr_L0
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0F81       [1]    PORTB
0x0F89       [1]    LATA
0x0F8B       [1]    LATC
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
